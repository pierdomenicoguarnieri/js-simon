const btnPlay = document.getElementById("btnPlay");

const btnSend = document.getElementById("send");

const numbersContainer = document.querySelector(".numbers-container");

const inputContainer = document.querySelector(".input-container");

const outputContainer = document.querySelector(".output-container");

let generatedNumbers = [];

let guessedNumbers = 0;

btnPlay.addEventListener("click", createPlayGround);

btnSend.addEventListener("click", gameResult);

/**
 * Callback function
 * 
 */
function createPlayGround(){
  generatedNumbers = verifyRandomNumber(numbersContainer);
  for(let i = 0; i < generatedNumbers.length; i++){
    numbersContainer.innerHTML +=`
    <span>${generatedNumbers[i]}</span>
    `
  }

  setTimeout(numbersDisappear, 5000, numbersContainer);
  setTimeout(inputAppear, 5250, inputContainer);
}

/**
 * Callback function
 * 
 */
function gameResult(){
  const inputArray = []
  for(let i = 0; i < 5; i++){
  const input = document.getElementById("input" + (i + 1));
  if(!inputArray.includes(parseInt(input.value)))inputArray.push(parseInt(input.value));
  }
  const outputMessage = document.createElement("h1");

  arrayCheck(inputArray, outputMessage)

  outputContainer.append(outputMessage);
}

/**
 * This function generates a random number between 1 and 100
 * 
 * @returns random number
 */
const getRandomNumber = () => Math.floor(Math.random() * 100) + 1;

/**
 * This function verifies that the numbers generated randomly are unique, if this is true then it pushes the number in the array, if it isn't then it calls again the function to generate a random number until the array lenght is 5.
 * 
 * @returns array containing unique numbers
 */
function verifyRandomNumber(){
  let array = [];
  do{
    const number = getRandomNumber();
    if(!array.includes(number)) array.push(number)
  }while(array.length !== 5)
  return array;
}

/**
 * This function removes the class "opacity-0"
 * 
 * @param {element} numbersContainer 
 */
function numbersDisappear(numbersContainer){
  numbersContainer.classList.add("opacity-0");
}

/**
 * This function removes the class "opacity-0"
 * 
 * @param {element} inputAppear 
 */
function inputAppear(inputAppear){
  inputAppear.classList.remove("opacity-0");
}

/**
 * This function checks the numbers that the user inputs with the numbers generated by the computer.
 * 
 * @param {array} inputArray 
 * @param {string} outputMessage 
 */
function arrayCheck(inputArray, outputMessage){
  let output = "";
  for(let i = 0; i < inputArray.length; i ++){
    if(generatedNumbers.includes(inputArray[i])){
      guessedNumbers++;
      output += `${inputArray[i]} `;
      outputMessage.innerHTML = `Hai indovinato ${guessedNumbers} numeri: "${output}" i numeri generati erano: ${generatedNumbers}`
    }else if(guessedNumbers === 0){
      output =`Non hai indovinato nessun numero.`
      outputMessage.innerHTML = `${output}`
    }
  }
}